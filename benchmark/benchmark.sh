#!/bin/bash

# benchmark.sh - Benchmark script for leqm_macos
# Processes all .wav files in /benchmark/examples and generates a markdown report

set -euo pipefail

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
EXAMPLES_DIR="$SCRIPT_DIR/examples"
LEQM_EXECUTABLE="$PROJECT_ROOT/build/leqm_macos"
DATE=$(date +"%Y-%m-%d")
OUTPUT_FILE="$SCRIPT_DIR/leqm_macos.$DATE.md"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check prerequisites
check_prerequisites() {
    log "Checking prerequisites..."

    if [[ ! -d "$EXAMPLES_DIR" ]]; then
        error "Examples directory not found: $EXAMPLES_DIR"
        exit 1
    fi

    if [[ ! -f "$LEQM_EXECUTABLE" ]]; then
        error "leqm_macos executable not found: $LEQM_EXECUTABLE"
        error "Please build the project first using: make"
        exit 1
    fi

    if [[ ! -x "$LEQM_EXECUTABLE" ]]; then
        error "leqm_macos is not executable: $LEQM_EXECUTABLE"
        exit 1
    fi

    # Count WAV files
    local wav_count
    wav_count=$(find "$EXAMPLES_DIR" -name "*.wav" -type f | wc -l)
    if [[ $wav_count -eq 0 ]]; then
        error "No .wav files found in $EXAMPLES_DIR"
        exit 1
    fi

    log "Found $wav_count .wav file(s) to process"
    log "Prerequisites check passed"
}

# Parse leqm_macos output to extract key information
parse_leqm_output() {
    local output="$1"
    local filename="$2"

    # Extract values using grep and awk
    local sample_rate=$(echo "$output" | grep "Sample rate:" | awk '{print $3}')
    local channels=$(echo "$output" | grep "Channels:" | awk '{print $2}')
    local frames=$(echo "$output" | grep "Frames:" | awk '{print $2}')
    local leq_m=$(echo "$output" | grep "Leq(M):" | awk '{print $2}')

    # Calculate duration in seconds
    local duration=""
    if [[ -n "$sample_rate" && -n "$frames" && "$sample_rate" != "0" ]]; then
        duration=$(echo "scale=2; $frames / $sample_rate" | bc -l 2>/dev/null || echo "N/A")
    fi

    # Check if measurement was successful
    if [[ -z "$leq_m" ]]; then
        echo "| $filename | ERROR | - | - | - | - | Failed to measure |"
    else
        echo "| $filename | $leq_m dB | ${sample_rate:-N/A} Hz | ${channels:-N/A} | ${frames:-N/A} | ${duration:-N/A}s | ✓ |"
    fi
}

# Process a single WAV file
process_wav_file() {
    local wav_file="$1"
    local filename
    filename=$(basename "$wav_file")

    log "Processing: $filename" >&2

    # Run leqm_macos and capture output
    local output
    local exit_code=0

    output=$("$LEQM_EXECUTABLE" "$wav_file" 2>&1) || exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        warn "leqm_macos returned exit code $exit_code for $filename" >&2
        echo "| $filename | ERROR | - | - | - | - | Exit code: $exit_code |"
    else
        parse_leqm_output "$output" "$filename"
    fi
}

# Generate markdown report
generate_report() {
    log "Generating markdown report: $OUTPUT_FILE"

    cat > "$OUTPUT_FILE" << EOF
# Leq(M) Benchmark Results

**Date:** $DATE
**Tool:** leqm_macos
**Directory:** \`$(basename "$EXAMPLES_DIR")\`
**Generated by:** benchmark.sh

## Summary

This report contains Leq(M) measurements for all WAV files in the examples directory.

## Results

| File | Leq(M) | Sample Rate | Channels | Frames | Duration | Status |
|------|--------|-------------|----------|--------|----------|---------|
EOF

    # Process all WAV files
    local processed_count=0
    local success_count=0
    binary_version=$("$LEQM_EXECUTABLE" --version 2>&1 | tail -1 || echo "Version info not available")

    while IFS= read -r -d '' wav_file; do
        result=$(process_wav_file "$wav_file")
        echo "$result" >> "$OUTPUT_FILE"
        ((processed_count++))

        # Count successful measurements
        if [[ "$result" != *"ERROR"* ]]; then
            ((success_count++))
        fi
    done < <(find "$EXAMPLES_DIR" -name "*.wav" -type f -print0 | sort -z)

    # Add footer to report
    cat >> "$OUTPUT_FILE" << EOF

## Statistics

- **Total files processed:** $processed_count
- **Successful measurements:** $success_count
- **Failed measurements:** $((processed_count - success_count))

## Technical Details

### Measurement Standard
- **ISO 21727:2004** - Motion-picture audio measurement
- **ISO 21727:2016** - Short duration content (≤3 minutes)

### Tool Information

$binary_version

### System Information
- **Platform:** $(uname -s)
- **Architecture:** $(uname -m)
- **Date:** $(date)
- **Working Directory:** $(pwd)

---
*Generated by benchmark.sh on $DATE*
EOF

    log "Report generated successfully: $OUTPUT_FILE"
    log "Processed $processed_count files with $success_count successful measurements"
}

# Main execution
main() {
    log "Starting Leq(M) benchmark..."
    log "Output file: $OUTPUT_FILE"

    check_prerequisites
    generate_report

    log "Benchmark completed successfully!"
    log "View the report: cat $OUTPUT_FILE"
}

# Check if bc (calculator) is available for duration calculations
if ! command -v bc >/dev/null 2>&1; then
    warn "bc (calculator) not found - duration calculations will show 'N/A'"
fi

# Run main function
main "$@"